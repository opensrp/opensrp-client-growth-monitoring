description = 'OpenSRP growth monitoring client library'

buildscript {
    repositories {
        google()
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "com.android.tools.build:gradle:$androidToolsBuildGradle"
        classpath "gradle.plugin.org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.12.0"
    }
}

apply plugin: 'com.android.library'
apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'

jacoco {
    toolVersion = "0.8.8"
}

android {
    compileSdkVersion androidCompileSdkVersion
    buildToolsVersion androidBuildToolsVersion

    defaultPublishConfig !isReleaseBuild() ? "debug" : "release"

    defaultConfig {
        minSdkVersion androidMinSdkVersion
        targetSdkVersion androidTargetSdkVersion
        versionCode Integer.parseInt(project.VERSION_CODE)
        versionName project.VERSION_NAME
        multiDexEnabled true
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "int", "GROWTH_MONITORING_SYNC_TIME", '15'
        }

        debug {
            buildConfigField "int", "GROWTH_MONITORING_SYNC_TIME", '15'
            testCoverageEnabled false //Weird bug fix : https://github.com/vanniktech/gradle-android-junit-jacoco-plugin/issues/183
        }
    }

    dexOptions {
        javaMaxHeapSize "4g"
    }

    lintOptions {
        abortOnError false
    }

    // avoid errors with message 'Duplicate files copied in APK ...'
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'LICENSE.txt'
        exclude 'META-INF/LICENSE.md'
        exclude 'META-INF/NOTICE.md'
        exclude 'META-INF/ASL2.0'
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
    jacoco.excludes = ['jdk.internal.*']
}


allprojects {
    repositories {
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
        maven { url "https://s3.amazonaws.com/repo.commonsware.com" }
        mavenLocal()
        google()
    }
}

dependencies {

    implementation('org.smartregister:opensrp-client-core:6.0.0-BETA2-SNAPSHOT@aar') {
        transitive = true
        exclude group: 'com.github.bmelnychuk', module: 'atv'
        exclude group: 'com.ibm.fhir', module: 'fhir-model'
        exclude group: 'com.ibm.fhir', module: 'fhir-path'
    }

    implementation('org.smartregister:opensrp-client-native-form:3.0.0-BETA-SNAPSHOT@aar') {
        transitive = true
        exclude group: 'com.android.support', module: 'recyclerview-v7'
        exclude group: 'com.google.code.gson', module: 'gson'
        exclude group: 'com.ibm.fhir', module: 'fhir-model'
        exclude group: 'com.ibm.fhir', module: 'fhir-path'
        exclude group: 'io.ona.rdt-capture', module: 'lib'
    }

    implementation group: 'org.apache.commons', name: 'commons-csv', version: '1.4'
    implementation 'com.google.code.gson:gson:2.9.0'
    implementation 'com.mcxiaoke.volley:library:1.0.19'
    implementation 'com.github.lecho:hellocharts-library:1.5.8@aar'

    testImplementation 'junit:junit:4.13.2'

    def robolectricVersion = '4.1'
    testImplementation("org.robolectric:robolectric:$robolectricVersion") {
        exclude group: 'com.google.auto.service', module: 'auto-service'
        exclude group: 'com.android.support'
    }
    testImplementation "org.robolectric:shadows-multidex:$robolectricVersion"
    testImplementation "org.robolectric:shadows-support-v4:3.3.2"

    androidTestImplementation('androidx.test.espresso:espresso-core:3.4.0') {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'junit', module: 'junit'
    }

    // PowerMock
    def powerMockVersion = '2.0.9'
    testImplementation "org.powermock:powermock-module-junit4:$powerMockVersion"
    testImplementation "org.powermock:powermock-module-junit4-rule:$powerMockVersion"
    testImplementation "org.powermock:powermock-api-mockito2:$powerMockVersion"
    testImplementation("org.powermock:powermock-classloading-xstream:$powerMockVersion")
    testImplementation 'org.apache.maven:maven-ant-tasks:2.1.3'
    testImplementation group: 'org.skyscreamer', name: 'jsonassert', version: '1.5.0'

    testImplementation 'com.ibm.fhir:fhir-model:4.7.1'
    testImplementation 'com.ibm.fhir:fhir-path:4.7.1'
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest']) {

    reports {
        xml.enabled = true
        html.enabled = true
    }

    getReports().getXml().setDestination(file("${buildDir}/reports/jacoco/jacocoRootReport/merged.xml"))
    getReports().getHtml().setDestination(file("${buildDir}/reports/jacoco/jacocoRootReport/html"))

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*', 'androidx/**/*.*', '**/*$ViewBinder*.*']
    def debugTree = fileTree(dir: "$project.buildDir/intermediates/javac/debug/classes", excludes: fileFilter)
    def mainSrc = "$project.projectDir/src/main/java"

    sourceDirectories.setFrom(([mainSrc]))
    classDirectories.setFrom(files([debugTree]))
    executionData.setFrom(fileTree(dir: project.buildDir, includes: [
            'jacoco/testDebugUnitTest.exec', 'outputs/code-coverage/connected/*coverage.ec'
    ]))
}

coveralls {
    jacocoReportPath = "${buildDir}/reports/jacoco/jacocoRootReport/merged.xml"
}

apply from: '../maven.gradle'
